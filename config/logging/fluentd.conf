# Fluentd Configuration for Claude TIU
# Lightweight log collection and forwarding

# System configuration
<system>
  root_dir /var/log/fluentd
  log_level info
  workers 2
  <log>
    format json
    time_format %Y-%m-%dT%H:%M:%S.%NZ
  </log>
</system>

# Input sources
<source>
  @type tail
  @id application_logs
  path /app/logs/*.log
  pos_file /var/log/fluentd/application.log.pos
  tag application.*
  format json
  time_format %Y-%m-%d %H:%M:%S.%L
  time_key timestamp
  refresh_interval 5
  read_from_head true
  <parse>
    @type regexp
    expression /^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?<level>\w+) - (?<logger>[\w\.]+) - (?<message>.*)$/
  </parse>
</source>

<source>
  @type tail
  @id error_logs
  path /app/logs/error*.log
  pos_file /var/log/fluentd/error.log.pos
  tag error.*
  format json
  time_format %Y-%m-%d %H:%M:%S.%L
  time_key timestamp
  refresh_interval 5
  read_from_head true
  multiline_flush_interval 5s
  <parse>
    @type multiline
    format_firstline /^\d{4}-\d{2}-\d{2}/
    format1 /^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?<level>\w+) - (?<logger>[\w\.]+) - (?<message>.*)/
  </parse>
</source>

# Docker container logs
<source>
  @type docker
  @id docker_logs
  docker_host unix:///var/run/docker.sock
  container_name_regex .*claude-tiu.*
  tag docker.**
  format json
  time_format %Y-%m-%dT%H:%M:%S.%NZ
  time_key time
</source>

# HTTP input for webhook logs
<source>
  @type http
  @id webhook_logs
  port 9880
  bind 0.0.0.0
  body_size_limit 32m
  keepalive_timeout 10s
  tag webhook
  format json
</source>

# Forward input for other services
<source>
  @type forward
  @id forward_input
  port 24224
  bind 0.0.0.0
  tag forward.**
</source>

# Syslog input
<source>
  @type syslog
  @id syslog_input
  port 5514
  bind 0.0.0.0
  tag system.**
  format /^(?<timestamp>[^ ]*\s*[^ ]* [^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
  time_format %b %d %H:%M:%S
</source>

# Filters and parsers
<filter application.**>
  @type parser
  key_name message
  reserve_data true
  <parse>
    @type json
  </parse>
</filter>

<filter **>
  @type record_transformer
  <record>
    service claude-tiu
    environment ${ENVIRONMENT}
    version ${APP_VERSION}
    hostname ${HOSTNAME}
    pod_name ${POD_NAME}
    node_name ${NODE_NAME}
  </record>
</filter>

# Security log filtering
<filter **>
  @type grep
  <regexp>
    key message
    pattern (authentication|authorization|security|login|failed|unauthorized|forbidden)
  </regexp>
  tag security
</filter>

# Error log filtering
<filter **>
  @type grep
  <regexp>
    key level
    pattern (ERROR|CRITICAL|FATAL)
  </regexp>
  tag error
</filter>

# Performance log filtering
<filter **>
  @type grep
  <regexp>
    key message
    pattern (response_time|latency|slow|performance|timeout)
  </regexp>
  tag performance
</filter>

# Add severity levels
<filter **>
  @type record_transformer
  enable_ruby true
  <record>
    severity ${
      case record["level"]
      when "CRITICAL", "FATAL"
        "critical"
      when "ERROR"
        "error"
      when "WARN", "WARNING"
        "warning"
      when "INFO"
        "info"
      when "DEBUG"
        "debug"
      else
        "info"
      end
    }
  </record>
</filter>

# Parse structured logs
<filter **>
  @type parser
  key_name message
  reserve_data true
  inject_key_prefix parsed_
  <parse>
    @type json
  </parse>
</filter>

# GeoIP enrichment for IP addresses
<filter **>
  @type geoip
  geoip_lookup_keys client_ip, remote_addr, x_forwarded_for
  <record>
    location_properties '{"lat":${latitude}, "lon":${longitude}}'
    location_string '${latitude},${longitude}'
    location_array '[${longitude},${latitude}]'
  </record>
  skip_adding_null_record true
</filter>

# User agent parsing
<filter **>
  @type ua_parser
  key_name user_agent
  out_key ua
</filter>

# Rate limiting for noisy logs
<filter **>
  @type throttle
  group_key logger
  group_bucket_period_s 60
  group_bucket_limit 100
</filter>

# Output configurations
<match application.**>
  @type copy
  
  # Primary output to Elasticsearch
  <store>
    @type elasticsearch
    host "#{ENV['ELASTICSEARCH_HOST'] || 'localhost'}"
    port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
    scheme https
    ssl_verify false
    user "#{ENV['ELASTICSEARCH_USER']}"
    password "#{ENV['ELASTICSEARCH_PASSWORD']}"
    index_name claude-tiu-application
    template_name claude-tiu-application
    template_file /fluentd/templates/application-template.json
    template_overwrite true
    type_name _doc
    time_key @timestamp
    time_key_format %Y-%m-%dT%H:%M:%S.%NZ
    include_tag_key true
    tag_key fluentd_tag
    logstash_format true
    logstash_prefix claude-tiu-application
    logstash_dateformat %Y.%m.%d
    flush_interval 10s
    retry_limit 5
    retry_wait 1s
    max_retry_wait 30s
    reload_connections false
    reconnect_on_error true
    reload_on_failure true
    <buffer>
      @type file
      path /var/log/fluentd/application.buffer
      flush_mode interval
      flush_interval 10s
      chunk_limit_size 8MB
      total_limit_size 512MB
      overflow_action drop_oldest_chunk
      retry_type exponential_backoff
      retry_timeout 1h
      retry_max_interval 30s
    </buffer>
  </store>
  
  # Secondary output to file for backup
  <store>
    @type file
    path /var/log/fluentd/backup/application
    time_slice_format %Y%m%d
    compress gzip
    format json
    include_time_key true
    time_key timestamp
    time_format %Y-%m-%dT%H:%M:%S.%NZ
    <buffer time>
      timekey 1h
      timekey_wait 10m
      flush_mode lazy
      flush_at_shutdown true
    </buffer>
  </store>
</match>

<match error.**>
  @type copy
  
  # Error logs to dedicated index
  <store>
    @type elasticsearch
    host "#{ENV['ELASTICSEARCH_HOST'] || 'localhost'}"
    port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
    scheme https
    ssl_verify false
    user "#{ENV['ELASTICSEARCH_USER']}"
    password "#{ENV['ELASTICSEARCH_PASSWORD']}"
    index_name claude-tiu-errors
    template_name claude-tiu-errors
    template_file /fluentd/templates/error-template.json
    template_overwrite true
    type_name _doc
    logstash_format true
    logstash_prefix claude-tiu-errors
    logstash_dateformat %Y.%m.%d
    <buffer>
      @type file
      path /var/log/fluentd/error.buffer
      flush_mode interval
      flush_interval 5s
      chunk_limit_size 2MB
      retry_limit 10
    </buffer>
  </store>
  
  # Alert webhook for critical errors
  <store>
    @type http
    endpoint "#{ENV['ALERT_WEBHOOK_URL']}"
    http_method post
    serializer json
    headers {"Content-Type": "application/json", "Authorization": "Bearer #{ENV['ALERT_TOKEN']}"}
    format json
    <buffer>
      flush_interval 5s
      retry_limit 3
    </buffer>
  </store>
</match>

<match security.**>
  @type copy
  
  # Security logs to dedicated index
  <store>
    @type elasticsearch
    host "#{ENV['ELASTICSEARCH_HOST'] || 'localhost'}"
    port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
    scheme https
    ssl_verify false
    user "#{ENV['ELASTICSEARCH_USER']}"
    password "#{ENV['ELASTICSEARCH_PASSWORD']}"
    index_name claude-tiu-security
    template_name claude-tiu-security
    template_file /fluentd/templates/security-template.json
    template_overwrite true
    type_name _doc
    logstash_format true
    logstash_prefix claude-tiu-security
    logstash_dateformat %Y.%m.%d
    <buffer>
      @type file
      path /var/log/fluentd/security.buffer
      flush_mode interval
      flush_interval 30s
    </buffer>
  </store>
  
  # SIEM integration
  <store>
    @type forward
    send_timeout 60s
    recover_wait 10s
    heartbeat_interval 1s
    phi_threshold 8
    hard_timeout 60s
    <server>
      name siem-server
      host "#{ENV['SIEM_HOST']}"
      port "#{ENV['SIEM_PORT'] || '24224'}"
    </server>
    <buffer>
      @type file
      path /var/log/fluentd/siem.buffer
      flush_interval 10s
    </buffer>
  </store>
</match>

<match performance.**>
  @type elasticsearch
  host "#{ENV['ELASTICSEARCH_HOST'] || 'localhost'}"
  port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
  scheme https
  ssl_verify false
  user "#{ENV['ELASTICSEARCH_USER']}"
  password "#{ENV['ELASTICSEARCH_PASSWORD']}"
  index_name claude-tiu-performance
  template_name claude-tiu-performance
  template_file /fluentd/templates/performance-template.json
  template_overwrite true
  type_name _doc
  logstash_format true
  logstash_prefix claude-tiu-performance
  logstash_dateformat %Y.%m.%d
  <buffer>
    @type file
    path /var/log/fluentd/performance.buffer
    flush_mode interval
    flush_interval 30s
  </buffer>
</match>

# Docker logs
<match docker.**>
  @type elasticsearch
  host "#{ENV['ELASTICSEARCH_HOST'] || 'localhost'}"
  port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
  scheme https
  ssl_verify false
  user "#{ENV['ELASTICSEARCH_USER']}"
  password "#{ENV['ELASTICSEARCH_PASSWORD']}"
  index_name claude-tiu-docker
  type_name _doc
  logstash_format true
  logstash_prefix claude-tiu-docker
  logstash_dateformat %Y.%m.%d
  <buffer>
    @type file
    path /var/log/fluentd/docker.buffer
    flush_mode interval
    flush_interval 60s
  </buffer>
</match>

# Fallback for unmatched logs
<match **>
  @type elasticsearch
  host "#{ENV['ELASTICSEARCH_HOST'] || 'localhost'}"
  port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
  scheme https
  ssl_verify false
  user "#{ENV['ELASTICSEARCH_USER']}"
  password "#{ENV['ELASTICSEARCH_PASSWORD']}"
  index_name claude-tiu-misc
  type_name _doc
  logstash_format true
  logstash_prefix claude-tiu-misc
  logstash_dateformat %Y.%m.%d
  <buffer>
    @type file
    path /var/log/fluentd/misc.buffer
    flush_mode interval
    flush_interval 120s
  </buffer>
</match>

# Metrics output
<source>
  @type monitor_agent
  bind 0.0.0.0
  port 24220
  tag fluentd.monitor
</source>

<match fluentd.monitor.**>
  @type prometheus
  <metric>
    name fluentd_input_status_num_records_total
    type counter
    desc The total number of incoming records
    key num_records
    <labels>
      tag ${tag}
      hostname ${hostname}
    </labels>
  </metric>
  
  <metric>
    name fluentd_output_status_num_records_total
    type counter
    desc The total number of outgoing records
    key num_records
    <labels>
      tag ${tag}
      hostname ${hostname}
    </labels>
  </metric>
</match>