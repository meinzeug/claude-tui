[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "claude-tiu"
version = "0.1.0"
description = "Intelligent AI-powered Terminal User Interface for advanced software development"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Claude TIU Team", email = "team@claude-tiu.dev"}
]
keywords = ["ai", "development", "cli", "tui", "claude", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Terminals",
    "Topic :: Artificial Intelligence"
]

dependencies = [
    "textual>=0.40.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "pyyaml>=6.0",
    "watchdog>=3.0.0",
    "gitpython>=3.1.0",
    "jinja2>=3.1.0",
    "psutil>=5.9.0",
    "cachetools>=5.3.0",
    "asyncio-mqtt>=0.11.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0"
]
performance = [
    "uvloop>=0.17.0",
    "orjson>=3.9.0",
    "msgpack>=1.0.0",
    "lz4>=4.3.0"
]
all = ["claude-tiu[dev,performance]"]

[project.urls]
"Homepage" = "https://github.com/claude-tiu/claude-tiu"
"Bug Reports" = "https://github.com/claude-tiu/claude-tiu/issues"
"Documentation" = "https://claude-tiu.readthedocs.io"
"Source" = "https://github.com/claude-tiu/claude-tiu"

[project.scripts]
claude-tiu = "claude_tiu.main:main"
ctiu = "claude_tiu.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"claude_tiu" = ["templates/**/*", "assets/**/*", "schemas/**/*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=claude_tiu --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/claude_tiu"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/__main__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "pass"
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"