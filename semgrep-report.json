{"version":"1.133.0","results":[{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/ai/cache_manager.py","start":{"line":222,"col":24,"offset":7090},"end":{"line":222,"col":43,"offset":7109},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/ai/cache_manager.py","start":{"line":594,"col":26,"offset":20843},"end":{"line":594,"col":45,"offset":20862},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/ai/cache_manager.py","start":{"line":621,"col":20,"offset":21667},"end":{"line":621,"col":38,"offset":21685},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/ai/neural_trainer.py","start":{"line":674,"col":31,"offset":25969},"end":{"line":674,"col":55,"offset":25993},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.fastapi.security.wildcard-cors.wildcard-cors","path":"src/api/gateway/integration.py","start":{"line":156,"col":27,"offset":5387},"end":{"line":156,"col":32,"offset":5392},"extra":{"message":"CORS policy allows any origin (using wildcard '*'). This is insecure and should be avoided.","metadata":{"cwe":["CWE-942: Permissive Cross-domain Policy with Untrusted Domains"],"owasp":["A05:2021 - Security Misconfiguration"],"category":"security","technology":["python","fastapi"],"references":["https://owasp.org/Top10/A05_2021-Security_Misconfiguration","https://cwe.mitre.org/data/definitions/942.html"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","vulnerability_class":["Configuration"],"subcategory":["vuln"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/python.fastapi.security.wildcard-cors.wildcard-cors","shortlink":"https://sg.run/KxApY"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.fastapi.security.wildcard-cors.wildcard-cors","path":"src/api/main.py","start":{"line":62,"col":23,"offset":1824},"end":{"line":62,"col":28,"offset":1829},"extra":{"message":"CORS policy allows any origin (using wildcard '*'). This is insecure and should be avoided.","metadata":{"cwe":["CWE-942: Permissive Cross-domain Policy with Untrusted Domains"],"owasp":["A05:2021 - Security Misconfiguration"],"category":"security","technology":["python","fastapi"],"references":["https://owasp.org/Top10/A05_2021-Security_Misconfiguration","https://cwe.mitre.org/data/definitions/942.html"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","vulnerability_class":["Configuration"],"subcategory":["vuln"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/python.fastapi.security.wildcard-cors.wildcard-cors","shortlink":"https://sg.run/KxApY"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/api/middleware/caching.py","start":{"line":165,"col":28,"offset":5953},"end":{"line":165,"col":53,"offset":5978},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/api/middleware/caching.py","start":{"line":221,"col":35,"offset":8062},"end":{"line":221,"col":59,"offset":8086},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.unvalidated-password.unvalidated-password","path":"src/api/routes/auth_enhanced.py","start":{"line":259,"col":9,"offset":7661},"end":{"line":259,"col":44,"offset":7696},"extra":{"message":"The password on 'user' is being set without validating the password. Call django.contrib.auth.password_validation.validate_password() with validation functions before setting the password. See https://docs.djangoproject.com/en/3.0/topics/auth/passwords/ for more information.","fix":"if django.contrib.auth.password_validation.validate_password(request.password, user=user):\n            user.set_password(request.password)","metadata":{"cwe":["CWE-521: Weak Password Requirements"],"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/auth/passwords/#module-django.contrib.auth.password_validation"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/python.django.security.audit.unvalidated-password.unvalidated-password","shortlink":"https://sg.run/OPBL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"src/api/routes/auth_enhanced.py","start":{"line":570,"col":9,"offset":18541},"end":{"line":570,"col":52,"offset":18584},"extra":{"message":"Detected a python logger call with a potential hardcoded secret \"Token refresh failed: %s\" being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"src/api/routes/auth_enhanced.py","start":{"line":641,"col":9,"offset":20860},"end":{"line":641,"col":61,"offset":20912},"extra":{"message":"Detected a python logger call with a potential hardcoded secret \"Password reset request failed: %s\" being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"src/api/routes/auth_enhanced.py","start":{"line":672,"col":9,"offset":21881},"end":{"line":672,"col":53,"offset":21925},"extra":{"message":"Detected a python logger call with a potential hardcoded secret \"Password reset failed: %s\" being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.unvalidated-password.unvalidated-password","path":"src/api/routes/auth_enhanced.py","start":{"line":722,"col":9,"offset":23824},"end":{"line":722,"col":56,"offset":23871},"extra":{"message":"The password on 'current_user' is being set without validating the password. Call django.contrib.auth.password_validation.validate_password() with validation functions before setting the password. See https://docs.djangoproject.com/en/3.0/topics/auth/passwords/ for more information.","fix":"if django.contrib.auth.password_validation.validate_password(request.new_password, user=current_user):\n            current_user.set_password(request.new_password)","metadata":{"cwe":["CWE-521: Weak Password Requirements"],"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/auth/passwords/#module-django.contrib.auth.password_validation"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/python.django.security.audit.unvalidated-password.unvalidated-password","shortlink":"https://sg.run/OPBL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"src/api/routes/auth_enhanced.py","start":{"line":735,"col":9,"offset":24268},"end":{"line":735,"col":95,"offset":24354},"extra":{"message":"Detected a python logger call with a potential hardcoded secret \"Password changed for user: %s from %s\" being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"src/api/routes/auth_enhanced.py","start":{"line":745,"col":9,"offset":24600},"end":{"line":745,"col":54,"offset":24645},"extra":{"message":"Detected a python logger call with a potential hardcoded secret \"Password change failed: %s\" being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.unvalidated-password.unvalidated-password","path":"src/api/routes/auth_enhanced.py","start":{"line":857,"col":17,"offset":28642},"end":{"line":857,"col":61,"offset":28686},"extra":{"message":"The password on 'user' is being set without validating the password. Call django.contrib.auth.password_validation.validate_password() with validation functions before setting the password. See https://docs.djangoproject.com/en/3.0/topics/auth/passwords/ for more information.","fix":"if django.contrib.auth.password_validation.validate_password(secrets.token_urlsafe(32), user=user):\n                    user.set_password(secrets.token_urlsafe(32))","metadata":{"cwe":["CWE-521: Weak Password Requirements"],"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/auth/passwords/#module-django.contrib.auth.password_validation"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/python.django.security.audit.unvalidated-password.unvalidated-password","shortlink":"https://sg.run/OPBL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.audit.directly-returned-format-string.directly-returned-format-string","path":"src/auth/middleware.py","start":{"line":570,"col":9,"offset":20675},"end":{"line":570,"col":26,"offset":20692},"extra":{"message":"Detected Flask route directly returning a formatted string. This is subject to cross-site scripting if user input can reach the string. Consider using the template engine instead and rendering pages with 'render_template()'.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["flask"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.flask.security.audit.directly-returned-format-string.directly-returned-format-string","shortlink":"https://sg.run/Zv6o"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"src/auth/password_reset.py","start":{"line":113,"col":17,"offset":3189},"end":{"line":113,"col":73,"offset":3245},"extra":{"message":"Detected a python logger call with a potential hardcoded secret \"Password reset email sent to %s\" being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"src/auth/password_reset.py","start":{"line":115,"col":17,"offset":3280},"end":{"line":115,"col":84,"offset":3347},"extra":{"message":"Detected a python logger call with a potential hardcoded secret \"Failed to send password reset email to %s\" being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"src/auth/password_reset.py","start":{"line":120,"col":13,"offset":3444},"end":{"line":120,"col":70,"offset":3501},"extra":{"message":"Detected a python logger call with a potential hardcoded secret \"Error sending password reset email: %s\" being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","path":"src/auth/password_reset.py","start":{"line":381,"col":13,"offset":13835},"end":{"line":381,"col":65,"offset":13887},"extra":{"message":"Detected a python logger call with a potential hardcoded secret \"Password reset request failed: %s\" being logged. This may lead to secret credentials being exposed. Make sure that the logger is not logging  sensitive information.","metadata":{"cwe":["CWE-532: Insertion of Sensitive Information into Log File"],"category":"security","technology":["python"],"owasp":["A09:2021 - Security Logging and Monitoring Failures"],"references":["https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures"],"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/python.lang.security.audit.logging.logger-credential-leak.python-logger-credential-disclosure","shortlink":"https://sg.run/ydNx"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.non-literal-import.non-literal-import","path":"src/claude_tui/core/dependency_checker.py","start":{"line":67,"col":22,"offset":2088},"end":{"line":67,"col":73,"offset":2139},"extra":{"message":"Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.","metadata":{"owasp":["A01:2021 - Broken Access Control"],"cwe":["CWE-706: Use of Incorrectly-Resolved Name or Reference"],"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import","shortlink":"https://sg.run/y6Jk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.non-literal-import.non-literal-import","path":"src/claude_tui/core/dependency_checker.py","start":{"line":103,"col":20,"offset":3473},"end":{"line":103,"col":71,"offset":3524},"extra":{"message":"Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.","metadata":{"owasp":["A01:2021 - Broken Access Control"],"cwe":["CWE-706: Use of Incorrectly-Resolved Name or Reference"],"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import","shortlink":"https://sg.run/y6Jk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/claude_tui/validation/performance_optimizer.py","start":{"line":409,"col":30,"offset":14126},"end":{"line":409,"col":48,"offset":14144},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/community/cache/marketplace_cache.py","start":{"line":95,"col":16,"offset":3113},"end":{"line":95,"col":34,"offset":3131},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/community/cache/marketplace_cache.py","start":{"line":100,"col":16,"offset":3256},"end":{"line":100,"col":34,"offset":3274},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.sqlalchemy.performance.performance-improvements.len-all-count","path":"src/community/repositories/base_repository.py","start":{"line":164,"col":16,"offset":4918},"end":{"line":164,"col":43,"offset":4945},"extra":{"message":"Using QUERY.count() instead of len(QUERY.all()) sends less data to the client since the SQLAlchemy method is performed server-side.","metadata":{"category":"performance","technology":["sqlalchemy"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/python.sqlalchemy.performance.performance-improvements.len-all-count","shortlink":"https://sg.run/4y8g"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.sqlalchemy.security.audit.avoid-sqlalchemy-text.avoid-sqlalchemy-text","path":"src/community/repositories/template_repository.py","start":{"line":295,"col":25,"offset":10188},"end":{"line":295,"col":71,"offset":10234},"extra":{"message":"sqlalchemy.text passes the constructed SQL statement to the database mostly unchanged. This means that the usual SQL injection protections are not applied and this function is vulnerable to SQL injection if user input can reach here. Use normal SQLAlchemy operators (such as `or_()`, `and_()`, etc.) to construct SQL.","metadata":{"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"category":"security","technology":["sqlalchemy"],"confidence":"MEDIUM","references":["https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.sqlalchemy.security.audit.avoid-sqlalchemy-text.avoid-sqlalchemy-text","shortlink":"https://sg.run/yP1O"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.sqlalchemy.security.audit.avoid-sqlalchemy-text.avoid-sqlalchemy-text","path":"src/community/repositories/template_repository.py","start":{"line":300,"col":25,"offset":10454},"end":{"line":300,"col":71,"offset":10500},"extra":{"message":"sqlalchemy.text passes the constructed SQL statement to the database mostly unchanged. This means that the usual SQL injection protections are not applied and this function is vulnerable to SQL injection if user input can reach here. Use normal SQLAlchemy operators (such as `or_()`, `and_()`, etc.) to construct SQL.","metadata":{"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"category":"security","technology":["sqlalchemy"],"confidence":"MEDIUM","references":["https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.sqlalchemy.security.audit.avoid-sqlalchemy-text.avoid-sqlalchemy-text","shortlink":"https://sg.run/yP1O"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.sqlalchemy.security.audit.avoid-sqlalchemy-text.avoid-sqlalchemy-text","path":"src/community/services/recommendation_engine.py","start":{"line":408,"col":17,"offset":15056},"end":{"line":408,"col":34,"offset":15073},"extra":{"message":"sqlalchemy.text passes the constructed SQL statement to the database mostly unchanged. This means that the usual SQL injection protections are not applied and this function is vulnerable to SQL injection if user input can reach here. Use normal SQLAlchemy operators (such as `or_()`, `and_()`, etc.) to construct SQL.","metadata":{"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"category":"security","technology":["sqlalchemy"],"confidence":"MEDIUM","references":["https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.sqlalchemy.security.audit.avoid-sqlalchemy-text.avoid-sqlalchemy-text","shortlink":"https://sg.run/yP1O"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2","path":"src/community/services/template_service.py","start":{"line":39,"col":26,"offset":1239},"end":{"line":39,"col":66,"offset":1279},"extra":{"message":"Detected direct use of jinja2. If not done properly, this may bypass HTML escaping which opens up the application to cross-site scripting (XSS) vulnerabilities. Prefer using the Flask method 'render_template()' and templates with a '.html' extension in order to prevent XSS.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://jinja.palletsprojects.com/en/2.11.x/api/#basics"],"category":"security","technology":["flask"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.flask.security.xss.audit.direct-use-of-jinja2.direct-use-of-jinja2","shortlink":"https://sg.run/RoKe"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/database/caching.py","start":{"line":271,"col":37,"offset":9026},"end":{"line":271,"col":79,"offset":9068},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"src/database/caching.py","start":{"line":310,"col":44,"offset":10440},"end":{"line":310,"col":63,"offset":10459},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.sqlalchemy.security.audit.avoid-sqlalchemy-text.avoid-sqlalchemy-text","path":"src/database/query_optimizer.py","start":{"line":338,"col":44,"offset":13110},"end":{"line":338,"col":63,"offset":13129},"extra":{"message":"sqlalchemy.text passes the constructed SQL statement to the database mostly unchanged. This means that the usual SQL injection protections are not applied and this function is vulnerable to SQL injection if user input can reach here. Use normal SQLAlchemy operators (such as `or_()`, `and_()`, etc.) to construct SQL.","metadata":{"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"category":"security","technology":["sqlalchemy"],"confidence":"MEDIUM","references":["https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.sqlalchemy.security.audit.avoid-sqlalchemy-text.avoid-sqlalchemy-text","shortlink":"https://sg.run/yP1O"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.unvalidated-password.unvalidated-password","path":"src/database/repositories.py","start":{"line":189,"col":13,"offset":7379},"end":{"line":189,"col":40,"offset":7406},"extra":{"message":"The password on 'user' is being set without validating the password. Call django.contrib.auth.password_validation.validate_password() with validation functions before setting the password. See https://docs.djangoproject.com/en/3.0/topics/auth/passwords/ for more information.","fix":"if django.contrib.auth.password_validation.validate_password(password, user=user):\n                user.set_password(password)","metadata":{"cwe":["CWE-521: Weak Password Requirements"],"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/auth/passwords/#module-django.contrib.auth.password_validation"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/python.django.security.audit.unvalidated-password.unvalidated-password","shortlink":"https://sg.run/OPBL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.unvalidated-password.unvalidated-password","path":"src/database/repositories.py","start":{"line":343,"col":13,"offset":13570},"end":{"line":343,"col":44,"offset":13601},"extra":{"message":"The password on 'user' is being set without validating the password. Call django.contrib.auth.password_validation.validate_password() with validation functions before setting the password. See https://docs.djangoproject.com/en/3.0/topics/auth/passwords/ for more information.","fix":"if django.contrib.auth.password_validation.validate_password(new_password, user=user):\n                user.set_password(new_password)","metadata":{"cwe":["CWE-521: Weak Password Requirements"],"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/auth/passwords/#module-django.contrib.auth.password_validation"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/python.django.security.audit.unvalidated-password.unvalidated-password","shortlink":"https://sg.run/OPBL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.unvalidated-password.unvalidated-password","path":"src/database/repositories/user_repository.py","start":{"line":185,"col":13,"offset":5829},"end":{"line":185,"col":40,"offset":5856},"extra":{"message":"The password on 'user' is being set without validating the password. Call django.contrib.auth.password_validation.validate_password() with validation functions before setting the password. See https://docs.djangoproject.com/en/3.0/topics/auth/passwords/ for more information.","fix":"if django.contrib.auth.password_validation.validate_password(password, user=user):\n                user.set_password(password)","metadata":{"cwe":["CWE-521: Weak Password Requirements"],"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/auth/passwords/#module-django.contrib.auth.password_validation"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/python.django.security.audit.unvalidated-password.unvalidated-password","shortlink":"https://sg.run/OPBL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.unvalidated-password.unvalidated-password","path":"src/database/repositories/user_repository.py","start":{"line":528,"col":13,"offset":17944},"end":{"line":528,"col":44,"offset":17975},"extra":{"message":"The password on 'user' is being set without validating the password. Call django.contrib.auth.password_validation.validate_password() with validation functions before setting the password. See https://docs.djangoproject.com/en/3.0/topics/auth/passwords/ for more information.","fix":"if django.contrib.auth.password_validation.validate_password(new_password, user=user):\n                user.set_password(new_password)","metadata":{"cwe":["CWE-521: Weak Password Requirements"],"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/auth/passwords/#module-django.contrib.auth.password_validation"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/python.django.security.audit.unvalidated-password.unvalidated-password","shortlink":"https://sg.run/OPBL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.unvalidated-password.unvalidated-password","path":"src/database/repositories/user_repository.py","start":{"line":579,"col":13,"offset":19685},"end":{"line":579,"col":44,"offset":19716},"extra":{"message":"The password on 'user' is being set without validating the password. Call django.contrib.auth.password_validation.validate_password() with validation functions before setting the password. See https://docs.djangoproject.com/en/3.0/topics/auth/passwords/ for more information.","fix":"if django.contrib.auth.password_validation.validate_password(new_password, user=user):\n                user.set_password(new_password)","metadata":{"cwe":["CWE-521: Weak Password Requirements"],"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/auth/passwords/#module-django.contrib.auth.password_validation"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/python.django.security.audit.unvalidated-password.unvalidated-password","shortlink":"https://sg.run/OPBL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.fastapi.security.wildcard-cors.wildcard-cors","path":"src/mcp/endpoints.py","start":{"line":55,"col":19,"offset":1829},"end":{"line":55,"col":24,"offset":1834},"extra":{"message":"CORS policy allows any origin (using wildcard '*'). This is insecure and should be avoided.","metadata":{"cwe":["CWE-942: Permissive Cross-domain Policy with Untrusted Domains"],"owasp":["A05:2021 - Security Misconfiguration"],"category":"security","technology":["python","fastapi"],"references":["https://owasp.org/Top10/A05_2021-Security_Misconfiguration","https://cwe.mitre.org/data/definitions/942.html"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","vulnerability_class":["Configuration"],"subcategory":["vuln"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/python.fastapi.security.wildcard-cors.wildcard-cors","shortlink":"https://sg.run/KxApY"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.formatted-sql-query.formatted-sql-query","path":"src/monitoring/dashboard.py","start":{"line":137,"col":22,"offset":4923},"end":{"line":143,"col":31,"offset":5256},"extra":{"message":"Detected possible formatted SQL query. Use parameterized queries instead.","metadata":{"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"references":["https://stackoverflow.com/questions/775296/mysql-parameterized-queries"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.formatted-sql-query.formatted-sql-query","shortlink":"https://sg.run/EkWw"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query","path":"src/monitoring/dashboard.py","start":{"line":137,"col":22,"offset":4923},"end":{"line":143,"col":31,"offset":5256},"extra":{"message":"Avoiding SQL string concatenation: untrusted input concatenated with raw SQL query can result in SQL Injection. In order to execute raw query safely, prepared statement should be used. SQLAlchemy provides TextualSQL to easily used prepared statement with named parameters. For complex SQL composition, use SQL Expression Language or Schema Definition Language. In most cases, SQLAlchemy ORM will be a better option.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql","https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_quick_guide.htm","https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-more-specific-text-with-table-expression-literal-column-and-expression-column"],"category":"security","technology":["sqlalchemy"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query","shortlink":"https://sg.run/2b1L"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.non-literal-import.non-literal-import","path":"src/performance/lazy_loader.py","start":{"line":74,"col":26,"offset":2262},"end":{"line":74,"col":67,"offset":2303},"extra":{"message":"Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.","metadata":{"owasp":["A01:2021 - Broken Access Control"],"cwe":["CWE-706: Use of Incorrectly-Resolved Name or Reference"],"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import","shortlink":"https://sg.run/y6Jk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.non-literal-import.non-literal-import","path":"src/performance/lazy_loader.py","start":{"line":205,"col":22,"offset":6899},"end":{"line":205,"col":58,"offset":6935},"extra":{"message":"Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.","metadata":{"owasp":["A01:2021 - Broken Access Control"],"cwe":["CWE-706: Use of Incorrectly-Resolved Name or Reference"],"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import","shortlink":"https://sg.run/y6Jk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.non-literal-import.non-literal-import","path":"src/performance/lazy_loader.py","start":{"line":210,"col":22,"offset":7110},"end":{"line":210,"col":58,"offset":7146},"extra":{"message":"Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.","metadata":{"owasp":["A01:2021 - Broken Access Control"],"cwe":["CWE-706: Use of Incorrectly-Resolved Name or Reference"],"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import","shortlink":"https://sg.run/y6Jk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.non-literal-import.non-literal-import","path":"src/performance/lazy_loader.py","start":{"line":304,"col":32,"offset":10096},"end":{"line":304,"col":67,"offset":10131},"extra":{"message":"Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.","metadata":{"owasp":["A01:2021 - Broken Access Control"],"cwe":["CWE-706: Use of Incorrectly-Resolved Name or Reference"],"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import","shortlink":"https://sg.run/y6Jk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.non-literal-import.non-literal-import","path":"src/performance/performance_profiler.py","start":{"line":186,"col":17,"offset":6501},"end":{"line":186,"col":53,"offset":6537},"extra":{"message":"Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.","metadata":{"owasp":["A01:2021 - Broken Access Control"],"cwe":["CWE-706: Use of Incorrectly-Resolved Name or Reference"],"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import","shortlink":"https://sg.run/y6Jk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.jwt.security.unverified-jwt-decode.unverified-jwt-decode","path":"src/security/secure_auth_middleware.py","start":{"line":327,"col":67,"offset":12440},"end":{"line":327,"col":72,"offset":12445},"extra":{"message":"Detected JWT token decoded with 'verify=False'. This bypasses any integrity checks for the token which means the token could be tampered with by malicious actors. Ensure that the JWT token is verified.","fix":"True","metadata":{"owasp":["A02:2017 - Broken Authentication","A07:2021 - Identification and Authentication Failures"],"cwe":["CWE-287: Improper Authentication"],"references":["https://github.com/we45/Vulnerable-Flask-App/blob/752ee16087c0bfb79073f68802d907569a1f0df7/app/app.py#L96"],"category":"security","technology":["jwt"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/python.jwt.security.unverified-jwt-decode.unverified-jwt-decode","shortlink":"https://sg.run/6nyB"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[],"paths":{"scanned":["src/CLI_IMPLEMENTATION_COMPLETE.md","src/MCP_INTEGRATION_COMPLETE.md","src/__init__.py","src/__pycache__/__init__.cpython-310.pyc","src/__pycache__/queen_brain_chat.cpython-310.pyc","src/ai/__init__.py","src/ai/__pycache__/__init__.cpython-310.pyc","src/ai/__pycache__/agent_coordinator.cpython-310.pyc","src/ai/__pycache__/cache_manager.cpython-310.pyc","src/ai/__pycache__/claude_flow_orchestrator.cpython-310.pyc","src/ai/__pycache__/neural_trainer.cpython-310.pyc","src/ai/__pycache__/performance_monitor.cpython-310.pyc","src/ai/__pycache__/swarm_manager.cpython-310.pyc","src/ai/__pycache__/swarm_orchestrator.cpython-310.pyc","src/ai/agent_coordinator.py","src/ai/cache_manager.py","src/ai/claude_flow_orchestrator.py","src/ai/learning/__init__.py","src/ai/learning/__pycache__/__init__.cpython-310.pyc","src/ai/learning/__pycache__/analytics.cpython-310.pyc","src/ai/learning/__pycache__/federated.cpython-310.pyc","src/ai/learning/__pycache__/integration.cpython-310.pyc","src/ai/learning/__pycache__/pattern_engine.cpython-310.pyc","src/ai/learning/__pycache__/personalization.cpython-310.pyc","src/ai/learning/__pycache__/privacy.cpython-310.pyc","src/ai/learning/analytics.py","src/ai/learning/federated.py","src/ai/learning/integration.py","src/ai/learning/pattern_engine.py","src/ai/learning/personalization.py","src/ai/learning/privacy.py","src/ai/neural_trainer.py","src/ai/performance_monitor.py","src/ai/swarm_manager.py","src/ai/swarm_orchestrator.py","src/analytics/__init__.py","src/analytics/__pycache__/__init__.cpython-310.pyc","src/analytics/__pycache__/collector.cpython-310.pyc","src/analytics/__pycache__/dashboard.cpython-310.pyc","src/analytics/__pycache__/engine.cpython-310.pyc","src/analytics/__pycache__/integration.cpython-310.pyc","src/analytics/__pycache__/models.cpython-310.pyc","src/analytics/__pycache__/monitoring.cpython-310.pyc","src/analytics/__pycache__/optimizer.cpython-310.pyc","src/analytics/__pycache__/predictor.cpython-310.pyc","src/analytics/__pycache__/regression.cpython-310.pyc","src/analytics/__pycache__/reporting.cpython-310.pyc","src/analytics/collector.py","src/analytics/dashboard.py","src/analytics/engine.py","src/analytics/integration.py","src/analytics/models.py","src/analytics/monitoring.py","src/analytics/optimizer.py","src/analytics/predictor.py","src/analytics/regression.py","src/analytics/reporting.py","src/api/__init__.py","src/api/__pycache__/__init__.cpython-310.pyc","src/api/__pycache__/main.cpython-310.pyc","src/api/dependencies/__init__.py","src/api/dependencies/__pycache__/__init__.cpython-310.pyc","src/api/dependencies/__pycache__/auth.cpython-310.pyc","src/api/dependencies/__pycache__/auth_helpers.cpython-310.pyc","src/api/dependencies/__pycache__/database.cpython-310.pyc","src/api/dependencies/auth.py","src/api/dependencies/auth_helpers.py","src/api/dependencies/database.py","src/api/gateway/__init__.py","src/api/gateway/auth.py","src/api/gateway/cache.py","src/api/gateway/core.py","src/api/gateway/integration.py","src/api/gateway/middleware.py","src/api/gateway/monitor.py","src/api/main.py","src/api/middleware/__init__.py","src/api/middleware/__pycache__/__init__.cpython-310.pyc","src/api/middleware/__pycache__/caching.cpython-310.pyc","src/api/middleware/__pycache__/compression.cpython-310.pyc","src/api/middleware/__pycache__/health_checks.cpython-310.pyc","src/api/middleware/__pycache__/logging.cpython-310.pyc","src/api/middleware/__pycache__/rate_limiting.cpython-310.pyc","src/api/middleware/__pycache__/security.cpython-310.pyc","src/api/middleware/caching.py","src/api/middleware/compression.py","src/api/middleware/health_checks.py","src/api/middleware/logging.py","src/api/middleware/rate_limiting.py","src/api/middleware/security.py","src/api/models/__init__.py","src/api/models/__pycache__/__init__.cpython-310.pyc","src/api/models/__pycache__/base.cpython-310.pyc","src/api/models/__pycache__/command.cpython-310.pyc","src/api/models/__pycache__/plugin.cpython-310.pyc","src/api/models/__pycache__/project.cpython-310.pyc","src/api/models/__pycache__/theme.cpython-310.pyc","src/api/models/__pycache__/user.cpython-310.pyc","src/api/models/base.py","src/api/models/command.py","src/api/models/plugin.py","src/api/models/project.py","src/api/models/theme.py","src/api/models/user.py","src/api/routes/__init__.py","src/api/routes/__pycache__/__init__.cpython-310.pyc","src/api/routes/__pycache__/auth.cpython-310.pyc","src/api/routes/__pycache__/auth_enhanced.cpython-310.pyc","src/api/routes/__pycache__/users.cpython-310.pyc","src/api/routes/auth.py","src/api/routes/auth_enhanced.py","src/api/routes/users.py","src/api/schemas/__init__.py","src/api/schemas/__pycache__/__init__.cpython-310.pyc","src/api/schemas/__pycache__/ai.cpython-310.pyc","src/api/schemas/__pycache__/analytics.cpython-310.pyc","src/api/schemas/__pycache__/auth.cpython-310.pyc","src/api/schemas/__pycache__/command.cpython-310.pyc","src/api/schemas/__pycache__/plugin.cpython-310.pyc","src/api/schemas/__pycache__/theme.cpython-310.pyc","src/api/schemas/__pycache__/user.cpython-310.pyc","src/api/schemas/__pycache__/websocket.cpython-310.pyc","src/api/schemas/__pycache__/workflows.cpython-310.pyc","src/api/schemas/ai.py","src/api/schemas/analytics.py","src/api/schemas/auth.py","src/api/schemas/command.py","src/api/schemas/plugin.py","src/api/schemas/theme.py","src/api/schemas/user.py","src/api/schemas/websocket.py","src/api/schemas/workflows.py","src/api/v1/__init__.py","src/api/v1/__pycache__/__init__.cpython-310.pyc","src/api/v1/__pycache__/ai.cpython-310.pyc","src/api/v1/__pycache__/ai_advanced.cpython-310.pyc","src/api/v1/__pycache__/analytics.cpython-310.pyc","src/api/v1/__pycache__/auth_enhanced.cpython-310.pyc","src/api/v1/__pycache__/community.cpython-310.pyc","src/api/v1/__pycache__/performance.cpython-310.pyc","src/api/v1/__pycache__/projects.cpython-310.pyc","src/api/v1/__pycache__/tasks.cpython-310.pyc","src/api/v1/__pycache__/validation.cpython-310.pyc","src/api/v1/__pycache__/websocket.cpython-310.pyc","src/api/v1/__pycache__/workflows.cpython-310.pyc","src/api/v1/ai.py","src/api/v1/ai_advanced.py","src/api/v1/analytics.py","src/api/v1/auth_enhanced.py","src/api/v1/community.py","src/api/v1/performance.py","src/api/v1/projects.py","src/api/v1/tasks.py","src/api/v1/validation.py","src/api/v1/websocket.py","src/api/v1/workflows.py","src/auth/__init__.py","src/auth/__pycache__/__init__.cpython-310.pyc","src/auth/__pycache__/audit_logger.cpython-310.pyc","src/auth/__pycache__/decorators.cpython-310.pyc","src/auth/__pycache__/jwt_auth.cpython-310.pyc","src/auth/__pycache__/jwt_service.cpython-310.pyc","src/auth/__pycache__/middleware.cpython-310.pyc","src/auth/__pycache__/password_reset.cpython-310.pyc","src/auth/__pycache__/rbac.cpython-310.pyc","src/auth/__pycache__/security_config.cpython-310.pyc","src/auth/__pycache__/session_manager.cpython-310.pyc","src/auth/__pycache__/session_service.cpython-310.pyc","src/auth/audit_logger.py","src/auth/auth_service.py","src/auth/decorators.py","src/auth/jwt_auth.py","src/auth/jwt_service.py","src/auth/middleware.py","src/auth/oauth/__init__.py","src/auth/oauth/__pycache__/__init__.cpython-310.pyc","src/auth/oauth/__pycache__/base.cpython-310.pyc","src/auth/oauth/__pycache__/github.cpython-310.pyc","src/auth/oauth/__pycache__/google.cpython-310.pyc","src/auth/oauth/base.py","src/auth/oauth/github.py","src/auth/oauth/google.py","src/auth/oauth_manager.py","src/auth/password_reset.py","src/auth/rbac.py","src/auth/security_compliance.py","src/auth/security_config.py","src/auth/session_manager.py","src/auth/session_service.py","src/auth/user_service.py","src/backend/__pycache__/claude_integration_layer.cpython-310.pyc","src/backend/__pycache__/core_services.cpython-310.pyc","src/backend/__pycache__/hive_mind_coordinator.cpython-310.pyc","src/backend/__pycache__/tui_backend_bridge.cpython-310.pyc","src/backend/claude_integration_layer.py","src/backend/core_services.py","src/backend/hive_mind_coordinator.py","src/backend/tui_backend_bridge.py","src/claude_tui/__init__.py","src/claude_tui/__pycache__/__init__.cpython-310.pyc","src/claude_tui/__pycache__/main.cpython-310.pyc","src/claude_tui/cli/__init__.py","src/claude_tui/cli/__pycache__/__init__.cpython-310.pyc","src/claude_tui/cli/__pycache__/completion.cpython-310.pyc","src/claude_tui/cli/__pycache__/main.cpython-310.pyc","src/claude_tui/cli/commands/__init__.py","src/claude_tui/cli/commands/__pycache__/__init__.cpython-310.pyc","src/claude_tui/cli/commands/__pycache__/ai_commands.cpython-310.pyc","src/claude_tui/cli/commands/__pycache__/core_commands.cpython-310.pyc","src/claude_tui/cli/commands/__pycache__/integration_commands.cpython-310.pyc","src/claude_tui/cli/commands/__pycache__/workspace_commands.cpython-310.pyc","src/claude_tui/cli/commands/ai_commands.py","src/claude_tui/cli/commands/core_commands.py","src/claude_tui/cli/commands/integration_commands.py","src/claude_tui/cli/commands/workspace_commands.py","src/claude_tui/cli/completion.py","src/claude_tui/cli/main.py","src/claude_tui/core/__init__.py","src/claude_tui/core/__pycache__/__init__.cpython-310.pyc","src/claude_tui/core/__pycache__/ai_interface.cpython-310.pyc","src/claude_tui/core/__pycache__/config_manager.cpython-310.pyc","src/claude_tui/core/__pycache__/dependency_checker.cpython-310.pyc","src/claude_tui/core/__pycache__/fallback_implementations.cpython-310.pyc","src/claude_tui/core/__pycache__/logger.cpython-310.pyc","src/claude_tui/core/__pycache__/progress_validator.cpython-310.pyc","src/claude_tui/core/__pycache__/project_manager.cpython-310.pyc","src/claude_tui/core/__pycache__/state_manager.cpython-310.pyc","src/claude_tui/core/__pycache__/task_engine.cpython-310.pyc","src/claude_tui/core/ai_interface.py","src/claude_tui/core/config_manager.py","src/claude_tui/core/dependency_checker.py","src/claude_tui/core/error_handler.py","src/claude_tui/core/fallback_implementations.py","src/claude_tui/core/logger.py","src/claude_tui/core/progress_validator.py","src/claude_tui/core/project_manager.py","src/claude_tui/core/state_manager.py","src/claude_tui/core/task_engine.py","src/claude_tui/integrations/INTEGRATION_VALIDATION_REPORT.md","src/claude_tui/integrations/__init__.py","src/claude_tui/integrations/__pycache__/__init__.cpython-310.pyc","src/claude_tui/integrations/__pycache__/ai_interface.cpython-310.pyc","src/claude_tui/integrations/__pycache__/anti_hallucination_integration.cpython-310.pyc","src/claude_tui/integrations/__pycache__/claude_code_client.cpython-310.pyc","src/claude_tui/integrations/__pycache__/claude_flow_client.cpython-310.pyc","src/claude_tui/integrations/__pycache__/integration_manager.cpython-310.pyc","src/claude_tui/integrations/ai_interface.py","src/claude_tui/integrations/anti_hallucination_integration.py","src/claude_tui/integrations/claude_code_client.py","src/claude_tui/integrations/claude_flow_client.py","src/claude_tui/integrations/health_monitor.py","src/claude_tui/integrations/integration_manager.py","src/claude_tui/interfaces/__init__.py","src/claude_tui/interfaces/__pycache__/__init__.cpython-310.pyc","src/claude_tui/interfaces/__pycache__/service_interfaces.cpython-310.pyc","src/claude_tui/interfaces/__pycache__/ui_interfaces.cpython-310.pyc","src/claude_tui/interfaces/service_interfaces.py","src/claude_tui/interfaces/ui_interfaces.py","src/claude_tui/main.py","src/claude_tui/models/__init__.py","src/claude_tui/models/__pycache__/__init__.cpython-310.pyc","src/claude_tui/models/__pycache__/ai_models.cpython-310.pyc","src/claude_tui/models/__pycache__/project.cpython-310.pyc","src/claude_tui/models/__pycache__/task.cpython-310.pyc","src/claude_tui/models/__pycache__/validation.cpython-310.pyc","src/claude_tui/models/ai_models.py","src/claude_tui/models/project.py","src/claude_tui/models/task.py","src/claude_tui/models/validation.py","src/claude_tui/services/__init__.py","src/claude_tui/services/__pycache__/__init__.cpython-310.pyc","src/claude_tui/services/__pycache__/config_service.cpython-310.pyc","src/claude_tui/services/config_service.py","src/claude_tui/ui/__init__.py","src/claude_tui/ui/__pycache__/__init__.cpython-310.pyc","src/claude_tui/ui/__pycache__/application.cpython-310.pyc","src/claude_tui/ui/__pycache__/main_app.cpython-310.pyc","src/claude_tui/ui/application.py","src/claude_tui/ui/main_app.py","src/claude_tui/ui/screens/__pycache__/clone_project_dialog.cpython-310.pyc","src/claude_tui/ui/screens/__pycache__/file_picker.cpython-310.pyc","src/claude_tui/ui/screens/__pycache__/help_screen.cpython-310.pyc","src/claude_tui/ui/screens/__pycache__/project_wizard.cpython-310.pyc","src/claude_tui/ui/screens/__pycache__/settings.cpython-310.pyc","src/claude_tui/ui/screens/__pycache__/workspace_screen.cpython-310.pyc","src/claude_tui/ui/screens/clone_project_dialog.py","src/claude_tui/ui/screens/file_picker.py","src/claude_tui/ui/screens/help_screen.py","src/claude_tui/ui/screens/project_wizard.py","src/claude_tui/ui/screens/settings.py","src/claude_tui/ui/screens/workspace_screen.py","src/claude_tui/ui/widgets/__init__.py","src/claude_tui/ui/widgets/__pycache__/__init__.cpython-310.pyc","src/claude_tui/ui/widgets/__pycache__/code_editor.cpython-310.pyc","src/claude_tui/ui/widgets/__pycache__/command_palette.cpython-310.pyc","src/claude_tui/ui/widgets/__pycache__/file_tree.cpython-310.pyc","src/claude_tui/ui/widgets/__pycache__/status_bar.cpython-310.pyc","src/claude_tui/ui/widgets/__pycache__/text_input.cpython-310.pyc","src/claude_tui/ui/widgets/code_editor.py","src/claude_tui/ui/widgets/command_palette.py","src/claude_tui/ui/widgets/file_tree.py","src/claude_tui/ui/widgets/status_bar.py","src/claude_tui/ui/widgets/task_dashboard.py","src/claude_tui/ui/widgets/text_input.py","src/claude_tui/utils/__pycache__/context_builder.cpython-310.pyc","src/claude_tui/utils/__pycache__/dependency_mapper.cpython-310.pyc","src/claude_tui/utils/__pycache__/dependency_resolver.cpython-310.pyc","src/claude_tui/utils/__pycache__/file_analyzer.cpython-310.pyc","src/claude_tui/utils/__pycache__/file_system.cpython-310.pyc","src/claude_tui/utils/__pycache__/metrics_collector.cpython-310.pyc","src/claude_tui/utils/__pycache__/pydantic_compat.cpython-310.pyc","src/claude_tui/utils/__pycache__/security.cpython-310.pyc","src/claude_tui/utils/__pycache__/subprocess_manager.cpython-310.pyc","src/claude_tui/utils/__pycache__/system_check.cpython-310.pyc","src/claude_tui/utils/__pycache__/template_engine.cpython-310.pyc","src/claude_tui/utils/context_builder.py","src/claude_tui/utils/dependency_mapper.py","src/claude_tui/utils/dependency_resolver.py","src/claude_tui/utils/file_analyzer.py","src/claude_tui/utils/file_system.py","src/claude_tui/utils/metrics_collector.py","src/claude_tui/utils/pydantic_compat.py","src/claude_tui/utils/security.py","src/claude_tui/utils/subprocess_manager.py","src/claude_tui/utils/system_check.py","src/claude_tui/utils/template_engine.py","src/claude_tui/validation/__pycache__/anti_hallucination_engine.cpython-310.pyc","src/claude_tui/validation/__pycache__/auto_completion_engine.cpython-310.pyc","src/claude_tui/validation/__pycache__/auto_correction_engine.cpython-310.pyc","src/claude_tui/validation/__pycache__/deployment_config.cpython-310.pyc","src/claude_tui/validation/__pycache__/editor_integration.cpython-310.pyc","src/claude_tui/validation/__pycache__/execution_tester.cpython-310.pyc","src/claude_tui/validation/__pycache__/integration_manager.cpython-310.pyc","src/claude_tui/validation/__pycache__/performance_optimizer.cpython-310.pyc","src/claude_tui/validation/__pycache__/placeholder_detector.cpython-310.pyc","src/claude_tui/validation/__pycache__/progress_validator.cpython-310.pyc","src/claude_tui/validation/__pycache__/real_time_validator.cpython-310.pyc","src/claude_tui/validation/__pycache__/semantic_analyzer.cpython-310.pyc","src/claude_tui/validation/__pycache__/training_data_generator.cpython-310.pyc","src/claude_tui/validation/__pycache__/types.cpython-310.pyc","src/claude_tui/validation/__pycache__/validation_dashboard.cpython-310.pyc","src/claude_tui/validation/__pycache__/workflow_integration_manager.cpython-310.pyc","src/claude_tui/validation/anti_hallucination_engine.py","src/claude_tui/validation/auto_completion_engine.py","src/claude_tui/validation/auto_correction_engine.py","src/claude_tui/validation/deployment_config.py","src/claude_tui/validation/editor_integration.py","src/claude_tui/validation/execution_tester.py","src/claude_tui/validation/integration_manager.py","src/claude_tui/validation/performance_optimizer.py","src/claude_tui/validation/placeholder_detector.py","src/claude_tui/validation/progress_validator.py","src/claude_tui/validation/real_time_validator.py","src/claude_tui/validation/semantic_analyzer.py","src/claude_tui/validation/training_data_generator.py","src/claude_tui/validation/types.py","src/claude_tui/validation/validation_dashboard.py","src/claude_tui/validation/workflow_integration_manager.py","src/collaboration/__init__.py","src/collaboration/__pycache__/__init__.cpython-310.pyc","src/collaboration/__pycache__/analytics_engine.cpython-310.pyc","src/collaboration/__pycache__/communication_hub.cpython-310.pyc","src/collaboration/__pycache__/conflict_resolver.cpython-310.pyc","src/collaboration/__pycache__/models.cpython-310.pyc","src/collaboration/__pycache__/presence_manager.cpython-310.pyc","src/collaboration/__pycache__/sync_engine.cpython-310.pyc","src/collaboration/__pycache__/team_coordinator.cpython-310.pyc","src/collaboration/__pycache__/workspace_manager.cpython-310.pyc","src/collaboration/analytics_engine.py","src/collaboration/communication_hub.py","src/collaboration/conflict_resolver.py","src/collaboration/models.py","src/collaboration/presence_manager.py","src/collaboration/sync_engine.py","src/collaboration/team_coordinator.py","src/collaboration/workspace_manager.py","src/community/__init__.py","src/community/__pycache__/__init__.cpython-310.pyc","src/community/__pycache__/integration.cpython-310.pyc","src/community/api/__init__.py","src/community/api/__pycache__/__init__.cpython-310.pyc","src/community/api/__pycache__/marketplace_routes.cpython-310.pyc","src/community/api/__pycache__/template_routes.cpython-310.pyc","src/community/api/marketplace_routes.py","src/community/api/template_routes.py","src/community/cache/__pycache__/marketplace_cache.cpython-310.pyc","src/community/cache/marketplace_cache.py","src/community/database/__pycache__/schema.cpython-310.pyc","src/community/database/schema.py","src/community/integration.py","src/community/models/__init__.py","src/community/models/__pycache__/__init__.cpython-310.pyc","src/community/models/__pycache__/marketplace.cpython-310.pyc","src/community/models/__pycache__/moderation.cpython-310.pyc","src/community/models/__pycache__/plugin.cpython-310.pyc","src/community/models/__pycache__/rating.cpython-310.pyc","src/community/models/__pycache__/review.cpython-310.pyc","src/community/models/__pycache__/template.cpython-310.pyc","src/community/models/__pycache__/user.cpython-310.pyc","src/community/models/__pycache__/validation.cpython-310.pyc","src/community/models/marketplace.py","src/community/models/moderation.py","src/community/models/plugin.py","src/community/models/rating.py","src/community/models/review.py","src/community/models/template.py","src/community/models/user.py","src/community/models/validation.py","src/community/repositories/__init__.py","src/community/repositories/__pycache__/__init__.cpython-310.pyc","src/community/repositories/__pycache__/base_repository.cpython-310.pyc","src/community/repositories/__pycache__/marketplace_repository.cpython-310.pyc","src/community/repositories/__pycache__/template_repository.cpython-310.pyc","src/community/repositories/base_repository.py","src/community/repositories/marketplace_repository.py","src/community/repositories/template_repository.py","src/community/security/__pycache__/rate_limiter.cpython-310.pyc","src/community/security/rate_limiter.py","src/community/services/__init__.py","src/community/services/__pycache__/__init__.cpython-310.pyc","src/community/services/__pycache__/cache_service.cpython-310.pyc","src/community/services/__pycache__/marketplace_service.cpython-310.pyc","src/community/services/__pycache__/marketplace_service_enhanced.cpython-310.pyc","src/community/services/__pycache__/moderation_service.cpython-310.pyc","src/community/services/__pycache__/plugin_service.cpython-310.pyc","src/community/services/__pycache__/plugin_service_enhanced.cpython-310.pyc","src/community/services/__pycache__/rating_service.cpython-310.pyc","src/community/services/__pycache__/recommendation_engine.cpython-310.pyc","src/community/services/__pycache__/template_service.cpython-310.pyc","src/community/services/cache_service.py","src/community/services/marketplace_service.py","src/community/services/marketplace_service_enhanced.py","src/community/services/moderation_service.py","src/community/services/plugin_service.py","src/community/services/plugin_service_enhanced.py","src/community/services/rating_service.py","src/community/services/recommendation_engine.py","src/community/services/template_service.py","src/core/__init__.py","src/core/__pycache__/__init__.cpython-310.pyc","src/core/__pycache__/ai_cross_validator.cpython-310.pyc","src/core/__pycache__/ai_interface.cpython-310.pyc","src/core/__pycache__/completion_strategies.cpython-310.pyc","src/core/__pycache__/config.cpython-310.pyc","src/core/__pycache__/config_manager.cpython-310.pyc","src/core/__pycache__/decorators.cpython-310.pyc","src/core/__pycache__/error_handler.cpython-310.pyc","src/core/__pycache__/exceptions.cpython-310.pyc","src/core/__pycache__/fallback_implementations.cpython-310.pyc","src/core/__pycache__/logger.cpython-310.pyc","src/core/__pycache__/progress_tracker.cpython-310.pyc","src/core/__pycache__/project_manager.cpython-310.pyc","src/core/__pycache__/task_engine.cpython-310.pyc","src/core/__pycache__/types.cpython-310.pyc","src/core/__pycache__/utils.cpython-310.pyc","src/core/__pycache__/validator.cpython-310.pyc","src/core/ai_cross_validator.py","src/core/ai_interface.py","src/core/completion_strategies.py","src/core/config.py","src/core/config_manager.py","src/core/decorators.py","src/core/error_handler.py","src/core/exceptions.py","src/core/fallback_implementations.py","src/core/logger.py","src/core/progress_tracker.py","src/core/project_manager.py","src/core/task_engine.py","src/core/types.py","src/core/utils.py","src/core/validator.py","src/database/__init__.py","src/database/__pycache__/__init__.cpython-310.pyc","src/database/__pycache__/caching.cpython-310.pyc","src/database/__pycache__/connection_pool.cpython-310.pyc","src/database/__pycache__/migration_manager.cpython-310.pyc","src/database/__pycache__/models.cpython-310.pyc","src/database/__pycache__/performance_benchmark.cpython-310.pyc","src/database/__pycache__/query_optimizer.cpython-310.pyc","src/database/__pycache__/read_replica_manager.cpython-310.pyc","src/database/__pycache__/repositories.cpython-310.pyc","src/database/__pycache__/service.cpython-310.pyc","src/database/__pycache__/session.cpython-310.pyc","src/database/caching.py","src/database/connection_pool.py","src/database/migration_manager.py","src/database/migrations/__pycache__/env.cpython-310.pyc","src/database/migrations/env.py","src/database/migrations/script.py.mako","src/database/migrations/versions/__pycache__/e12a624f7293_initial_migration_with_all_models.cpython-310.pyc","src/database/migrations/versions/e12a624f7293_initial_migration_with_all_models.py","src/database/models.py","src/database/performance_benchmark.py","src/database/query_optimizer.py","src/database/read_replica_manager.py","src/database/repositories/__init__.py","src/database/repositories/__pycache__/__init__.cpython-310.pyc","src/database/repositories/__pycache__/audit_repository.cpython-310.pyc","src/database/repositories/__pycache__/base.cpython-310.pyc","src/database/repositories/__pycache__/factory.cpython-310.pyc","src/database/repositories/__pycache__/project_repository.cpython-310.pyc","src/database/repositories/__pycache__/session_repository.cpython-310.pyc","src/database/repositories/__pycache__/task_repository.cpython-310.pyc","src/database/repositories/__pycache__/user_repository.cpython-310.pyc","src/database/repositories/audit_repository.py","src/database/repositories/base.py","src/database/repositories/factory.py","src/database/repositories/project_repository.py","src/database/repositories/session_repository.py","src/database/repositories/task_repository.py","src/database/repositories/user_repository.py","src/database/repositories.py","src/database/service.py","src/database/session.py","src/dependency_resolution_summary.py","src/integration/__init__.py","src/integration/__pycache__/__init__.cpython-310.pyc","src/integration/__pycache__/bridge.cpython-310.pyc","src/integration/__pycache__/hooks_manager.cpython-310.pyc","src/integration/__pycache__/run_mcp_integration.cpython-310.pyc","src/integration/__pycache__/startup_manager.cpython-310.pyc","src/integration/__pycache__/test_integration.cpython-310.pyc","src/integration/__pycache__/tui_connector.cpython-310.pyc","src/integration/bridge.py","src/integration/hooks_manager.py","src/integration/run_mcp_integration.py","src/integration/startup_manager.py","src/integration/test_integration.py","src/integration/tui_connector.py","src/integrations/__init__.py","src/integrations/__pycache__/__init__.cpython-310.pyc","src/integrations/__pycache__/claude_code.cpython-310.pyc","src/integrations/__pycache__/claude_flow.cpython-310.pyc","src/integrations/__pycache__/example_usage.cpython-310.pyc","src/integrations/__pycache__/file_system.cpython-310.pyc","src/integrations/__pycache__/git_advanced.cpython-310.pyc","src/integrations/__pycache__/git_manager.cpython-310.pyc","src/integrations/claude_code.py","src/integrations/claude_flow.py","src/integrations/example_usage.py","src/integrations/file_system.py","src/integrations/git_advanced.py","src/integrations/git_manager.py","src/mcp/__init__.py","src/mcp/__pycache__/__init__.cpython-310.pyc","src/mcp/__pycache__/endpoints.cpython-310.pyc","src/mcp/__pycache__/server.cpython-310.pyc","src/mcp/endpoints.py","src/mcp/server.py","src/middleware/__init__.py","src/middleware/__pycache__/__init__.cpython-310.pyc","src/middleware/__pycache__/rbac.cpython-310.pyc","src/middleware/__pycache__/security_middleware.cpython-310.pyc","src/middleware/rbac.py","src/middleware/security_middleware.py","src/models/__init__.py","src/models/__pycache__/__init__.cpython-310.pyc","src/models/__pycache__/request_models.cpython-310.pyc","src/models/__pycache__/response_models.cpython-310.pyc","src/models/request_models.py","src/models/response_models.py","src/monitoring/__init__.py","src/monitoring/__pycache__/__init__.cpython-310.pyc","src/monitoring/__pycache__/dashboard.cpython-310.pyc","src/monitoring/dashboard.py","src/performance/.claude-flow/metrics/agent-metrics.json","src/performance/.claude-flow/metrics/performance.json","src/performance/.claude-flow/metrics/task-metrics.json","src/performance/MEMORY_OPTIMIZATION_SUCCESS_SUMMARY.md","src/performance/PERFORMANCE_OPTIMIZATION_SUMMARY.md","src/performance/README.md","src/performance/ULTIMATE_MEMORY_OPTIMIZATION_REPORT.md","src/performance/__init__.py","src/performance/__pycache__/__init__.cpython-310.pyc","src/performance/__pycache__/advanced_memory_profiler.cpython-310.pyc","src/performance/__pycache__/api_optimizer.cpython-310.pyc","src/performance/__pycache__/critical_optimizations.cpython-310.pyc","src/performance/__pycache__/emergency_memory_recovery.cpython-310.pyc","src/performance/__pycache__/gc_optimizer.cpython-310.pyc","src/performance/__pycache__/lazy_loader.cpython-310.pyc","src/performance/__pycache__/memory_optimizer.cpython-310.pyc","src/performance/__pycache__/memory_profiler.cpython-310.pyc","src/performance/__pycache__/object_pool.cpython-310.pyc","src/performance/__pycache__/performance_dashboard.cpython-310.pyc","src/performance/__pycache__/performance_profiler.cpython-310.pyc","src/performance/__pycache__/performance_test_suite.cpython-310.pyc","src/performance/__pycache__/production_monitor.cpython-310.pyc","src/performance/__pycache__/streaming_processor.cpython-310.pyc","src/performance/__pycache__/widget_memory_manager.cpython-310.pyc","src/performance/advanced_memory_profiler.py","src/performance/api_optimizer.py","src/performance/critical_optimizations.py","src/performance/emergency_memory_recovery.py","src/performance/gc_optimizer.py","src/performance/lazy_loader.py","src/performance/memory_benchmark_suite.py","src/performance/memory_optimizer.py","src/performance/memory_profiler.py","src/performance/object_pool.py","src/performance/performance_dashboard.py","src/performance/performance_profiler.py","src/performance/performance_test_suite.py","src/performance/production_monitor.py","src/performance/regression_tester.py","src/performance/streaming_processor.py","src/performance/widget_memory_manager.py","src/queen_brain_chat.py","src/security/__init__.py","src/security/__pycache__/__init__.cpython-310.pyc","src/security/__pycache__/api_key_manager.cpython-310.pyc","src/security/__pycache__/code_sandbox.cpython-310.pyc","src/security/__pycache__/input_validator.cpython-310.pyc","src/security/__pycache__/rate_limiter.cpython-310.pyc","src/security/__pycache__/secure_subprocess.cpython-310.pyc","src/security/api_key_manager.py","src/security/code_sandbox.py","src/security/input_sanitization.py","src/security/input_validator.py","src/security/rate_limiter.py","src/security/secure_auth_middleware.py","src/security/secure_subprocess.py","src/security/security_config_templates.py","src/security/security_hardening.py","src/services/__init__.py","src/services/__pycache__/__init__.cpython-310.pyc","src/services/__pycache__/ai_service.cpython-310.pyc","src/services/__pycache__/base.cpython-310.pyc","src/services/__pycache__/database_registry.cpython-310.pyc","src/services/__pycache__/database_service.cpython-310.pyc","src/services/__pycache__/project_service.cpython-310.pyc","src/services/__pycache__/registry.cpython-310.pyc","src/services/__pycache__/task_service.cpython-310.pyc","src/services/__pycache__/validation_service.cpython-310.pyc","src/services/ai_service.py","src/services/base.py","src/services/database_registry.py","src/services/database_service.py","src/services/project_service.py","src/services/registry.py","src/services/task_service.py","src/services/validation_service.py","src/ui/__init__.py","src/ui/__pycache__/__init__.cpython-310.pyc","src/ui/__pycache__/integration_bridge.cpython-310.pyc","src/ui/__pycache__/main_app.cpython-310.pyc","src/ui/__pycache__/run.cpython-310.pyc","src/ui/accessibility/accessibility_features.py","src/ui/integration_bridge.py","src/ui/integration_bridge.py.backup","src/ui/keyboard_navigation.py","src/ui/layouts/responsive_layout.py","src/ui/main_app.py","src/ui/performance/ui_optimization.py","src/ui/run.py","src/ui/screens/__init__.py","src/ui/screens/__pycache__/__init__.cpython-310.pyc","src/ui/screens/__pycache__/help_screen.cpython-310.pyc","src/ui/screens/__pycache__/project_wizard.cpython-310.pyc","src/ui/screens/__pycache__/settings.cpython-310.pyc","src/ui/screens/__pycache__/workspace_screen.cpython-310.pyc","src/ui/screens/help_screen.py","src/ui/screens/project_wizard.py","src/ui/screens/settings.py","src/ui/screens/workspace_screen.py","src/ui/styles/enhanced.tcss","src/ui/styles/main.css","src/ui/styles/main.tcss","src/ui/styles/themes/dark_modern.tcss","src/ui/styles/themes/light_modern.tcss","src/ui/test_bridge.py","src/ui/themes/theme_manager.py","src/ui/widgets/__init__.py","src/ui/widgets/__pycache__/__init__.cpython-310.pyc","src/ui/widgets/__pycache__/advanced_components.cpython-310.pyc","src/ui/widgets/__pycache__/console_widget.cpython-310.pyc","src/ui/widgets/__pycache__/enhanced_terminal_components.cpython-310.pyc","src/ui/widgets/__pycache__/git_workflow_widget.cpython-310.pyc","src/ui/widgets/__pycache__/metrics_dashboard.cpython-310.pyc","src/ui/widgets/__pycache__/modal_dialogs.cpython-310.pyc","src/ui/widgets/__pycache__/notification_system.cpython-310.pyc","src/ui/widgets/__pycache__/placeholder_alert.cpython-310.pyc","src/ui/widgets/__pycache__/progress_intelligence.cpython-310.pyc","src/ui/widgets/__pycache__/project_tree.cpython-310.pyc","src/ui/widgets/__pycache__/task_dashboard.cpython-310.pyc","src/ui/widgets/__pycache__/workflow_visualizer.cpython-310.pyc","src/ui/widgets/advanced_components.py","src/ui/widgets/console_widget.py","src/ui/widgets/enhanced_terminal_components.py","src/ui/widgets/git_workflow_widget.py","src/ui/widgets/metrics_dashboard.py","src/ui/widgets/modal_dialogs.py","src/ui/widgets/notification_system.py","src/ui/widgets/placeholder_alert.py","src/ui/widgets/progress_intelligence.py","src/ui/widgets/project_tree.py","src/ui/widgets/task_dashboard.py","src/ui/widgets/workflow_visualizer.py"]},"time":{"rules":[],"rules_parse_time":1.3940579891204834,"profiling_times":{"config_time":7.991257667541504,"core_time":54.445616006851196,"ignores_time":0.00536346435546875,"total_time":62.44290733337402},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":99.46568489074707,"per_file_time":{"mean":0.05674026519723175,"std_dev":0.02770912225406633},"very_slow_stats":{"time_ratio":0.0419352465686322,"count_ratio":0.0011409013120365088},"very_slow_files":[{"fpath":"src/api/v1/ai_advanced.py","ftime":1.6966891288757324},{"fpath":"src/integrations/git_advanced.py","ftime":2.47442889213562}]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[{"error_type":"Fixpoint timeout","severity":"warn","message":"Fixpoint timeout while performing taint analysis at src/performance/memory_benchmark_suite.py:287:8 [rules: 1, first: python.boto3.security.hardcoded-token.hardcoded-token]","details":"  --> src/performance/memory_benchmark_suite.py:287\n 285 |             return self._create_error_result(f\"Ultimate optimizer failed: {str(e)}\")\n 286 |             \n 287 |     def _benchmark_emergency_recovery(self) -> BenchmarkResult:\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 288 |         \"\"\"Benchmark emergency memory recovery\"\"\"\n 289 |         if not EmergencyMemoryRecovery:","location":{"path":"src/performance/memory_benchmark_suite.py","start":{"line":287,"col":9,"offset":11229},"end":{"line":287,"col":38,"offset":11258}}}],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.9910405059478994,"rules_selected_ratio":0.18199233716475097,"rules_matched_ratio":0.18199233716475097},"targets":[],"total_bytes":0,"max_memory_bytes":1120403264},"engine_requested":"OSS","skipped_rules":[]}