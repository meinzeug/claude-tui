apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "claude-tui.fullname" . }}
  labels:
    {{- include "claude-tui.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 25%
  selector:
    matchLabels:
      {{- include "claude-tui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "claude-tui.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "claude-tui.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.server.port }}
              protocol: TCP
          env:
            - name: ENVIRONMENT
              value: {{ .Values.config.environment | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
            - name: SERVER_HOST
              value: {{ .Values.config.server.host | quote }}
            - name: SERVER_PORT
              value: {{ .Values.config.server.port | quote }}
            - name: SERVER_WORKERS
              value: {{ .Values.config.server.workers | quote }}
            - name: CLAUDE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "claude-tui.fullname" . }}-secrets
                  key: claude-api-key
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "claude-tui.fullname" . }}-secrets
                  key: database-url
            - name: PYTHONPATH
              value: "/app/src"
            - name: PYTHONUNBUFFERED
              value: "1"
          {{- if .Values.healthChecks.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthChecks.liveness.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.healthChecks.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.healthChecks.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.healthChecks.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthChecks.readiness.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.healthChecks.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.healthChecks.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.healthChecks.startup.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.healthChecks.startup.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.healthChecks.startup.timeoutSeconds }}
            failureThreshold: {{ .Values.healthChecks.startup.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - sleep 15
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: temp-volume
              mountPath: /tmp
            {{- if .Values.persistence.enabled }}
            - name: data-volume
              mountPath: /app/data
            {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "claude-tui.fullname" . }}-config
        - name: temp-volume
          emptyDir:
            sizeLimit: "1Gi"
        {{- if .Values.persistence.enabled }}
        - name: data-volume
          persistentVolumeClaim:
            claimName: {{ include "claude-tui.fullname" . }}-pvc
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 30